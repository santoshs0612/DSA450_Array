Given an array Arr[] of N integers. Find the contiguous sub-array(containing at least one number) which has the maximum sum and return its sum.


Example 1:

Input:
N = 5
Arr[] = {1,2,3,-2,5}
Output:
9
Explanation:
Max subarray sum is 9
of elements (1, 2, 3, -2, 5) which 
is a contiguous subarray.
Example 2:

Input:
N = 4
Arr[] = {-1,-2,-3,-4}
Output:
-1
Explanation:
Max subarray sum is -1 
of element (-1)








    public:
    // arr: input array
    // n: size of array
    //Function to find the sum of contiguous subarray with maximum sum.
    long long maxSubarraySum(int arr[], int n){
        
        // Your code here
        long long max_sum=INT_MIN;
        long long curr_sum=0;
        
        int i=0,j=0;
        while(j<n)
        {
            
            curr_sum +=arr[j++];
            if(max_sum<curr_sum)
            {
                max_sum= curr_sum;
            }
            if(curr_sum<0)
            {
                curr_sum=0;
                i=j;
            }
        }
        return max_sum;
        
    }
};
