
Given an array of positive integers. Find the length of the longest sub-sequence such that elements in the subsequence are consecutive integers, the consecutive numbers can be in any order.
 

Example 1:

Input:
N = 7
a[] = {2,6,1,9,4,5,3}
Output:
6
Explanation:
The consecutive numbers here
are 1, 2, 3, 4, 5, 6. These 6 
numbers form the longest consecutive
subsquence.
Example 2:

Input:
N = 7
a[] = {1,9,3,10,4,20,2}
Output:
4
Explanation:
1, 2, 3, 4 is the longest
consecutive subsequence.










//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution{
  public:
    // arr[] : the input array
    // N : size of the array arr[]
    
    //Function to return length of longest subsequence of consecutive integers.
    int findLongestConseqSubseq(int arr[], int N)
    {
      //Your code here
      
      //// sort +remove duplicates then count subsequent 

///// O(N)+O(N)
/////////////////
    //   map<int,int> mp ;
      
    //   for(int i=0;i<N;i++)
    //   {
    //       mp[arr[i]]++;
    //   }
      
    //   int count=1;
    //   int max_count=INT_MIN;
    //   for(auto i=mp.begin();i!=mp.end();i++)
    //   {
    //       int temp =i->first;
    //       auto j=i;
    //       j++;
    //       if(j->first-temp==1)
    //       {
    //           count++;
    //       }
    //       else 
    //       {
    //           max_count= max(max_count,count);
    //           count=1;
    //       }
    //   }
    //   return max_count;
      
    }
};

//{ Driver Code Starts.
 
// Driver program
int main()
{
 int  t,n,i,a[100001];
 cin>>t;
 while(t--)
 {
  cin>>n;
  for(i=0;i<n;i++)
  cin>>a[i];
  Solution obj;
  cout<<obj.findLongestConseqSubseq(a, n)<<endl;
 }
      
    return 0;
}
// } Driver Code Ends
